{"ast":null,"code":"\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// // --- Local Storage Keys ---\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   EPICS: 'tf_epics_v3', // New key for epics\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3',\n// };\n\n// // --- Detailed Initial User Data ---\n// const detailedInitialUsers = [\n//     {\n//         id: 'u1',\n//         firstName: 'Admin',\n//         lastName: 'User',\n//         name: 'Admin User',\n//         email: 'admin@demo.com',\n//         role: 'Admin',\n//         department: 'Management',\n//         active: true,\n//         language: 'English',\n//         mobileNumber: '555-1001',\n//         dateFormat: 'YYYY-MM-DD',\n//         passwordResetNeeded: false,\n//         profileFile: null,\n//     },\n//     {\n//         id: 'u2',\n//         firstName: 'Dev',\n//         lastName: 'Alice',\n//         name: 'Dev Alice',\n//         email: 'alice@demo.com',\n//         role: 'Developer',\n//         department: 'Engineering',\n//         active: true,\n//         language: 'Spanish',\n//         mobileNumber: '555-2002',\n//         dateFormat: 'MM/DD/YYYY',\n//         passwordResetNeeded: true,\n//         profileFile: null,\n//     },\n//     {\n//         id: 'u3',\n//         firstName: 'Manager',\n//         lastName: 'Bob',\n//         name: 'Manager Bob',\n//         email: 'bob@demo.com',\n//         role: 'Manager',\n//         department: 'Sales',\n//         active: false,\n//         language: 'French',\n//         mobileNumber: '555-3003',\n//         dateFormat: 'DD/MM/YYYY',\n//         passwordResetNeeded: false,\n//         profileFile: null,\n//     },\n// ];\n\n// // --- Utility Functions for LocalStorage (Enhanced for detailed users) ---\n\n// const loadDetailedUsers = () => {\n//     try {\n//         const storedData = localStorage.getItem(KEY.USERS);\n//         if (storedData) {\n//             const users = JSON.parse(storedData);\n//             if (users.length > 0 && !users[0].firstName) {\n//                  console.warn(\"User data structure outdated. Re-initializing with detailed initial data.\");\n//                  saveDetailedUsers(detailedInitialUsers);\n//                  return detailedInitialUsers;\n//             }\n//             return users;\n//         }\n//     } catch (error) {\n//         console.error(\"Error reading localStorage:\", error);\n//     }\n//     saveDetailedUsers(detailedInitialUsers);\n//     return detailedInitialUsers;\n// };\n\n// const saveDetailedUsers = (users) => {\n//     try {\n//         localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//     } catch (error) {\n//         console.error(\"Error writing to localStorage:\", error);\n//     }\n// };\n\n// let users = loadDetailedUsers();\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       { id: 'mark', key: 'MARK', name: 'Mark Project', description: 'Mark project description', leads: ['u3'] }, // Changed ID\n//       { id: 'novya', key: 'NOVYA', name: 'Novya Project', description: 'Novya project description', leads: ['u2'] }, // Changed ID\n//       { id: 'epsilon', key: 'EPSILON', name: 'Epsilon Project', description: 'Epsilon project description', leads: ['u1'] },\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   // New: Initialize Epics\n//   if (!localStorage.getItem(KEY.EPICS)) {\n//     const initialEpics = [\n//       { id: 'e1', projectId: 'mark', name: 'Frontend Epic' },\n//       { id: 'e2', projectId: 'mark', name: 'Backend Epic' },\n//       { id: 'e3', projectId: 'novya', name: 'Database Optimization' },\n//       { id: 'e4', projectId: 'epsilon', name: 'UI/UX Redesign' },\n//     ];\n//     localStorage.setItem(KEY.EPICS, JSON.stringify(initialEpics));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       { id: 'i1', projectId: 'mark', epic: 'e1', epicName: 'Frontend Epic', title: 'Setup Mark repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n//       { id: 'i2', projectId: 'mark', epic: 'e1', epicName: 'Frontend Epic', title: 'Login Mark bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n//       { id: 'i3', projectId: 'novya', epic: 'e3', epicName: 'Database Optimization', title: 'OAuth Novya', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() },\n//       { id: 'i4', projectId: 'novya', epic: 'e3', epicName: 'Database Optimization', title: 'Novya Data Migration', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 8, createdAt: Date.now() },\n//       { id: 'i5', projectId: 'epsilon', epic: 'e4', epicName: 'UI/UX Redesign', title: 'Epsilon Home Page Wireframe', status: 'backlog', priority: 'P3', assignee: 'u1', type: 'Story', storyPoints: 5, createdAt: Date.now() },\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n//   }\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n//   }\n// }\n\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\n// // --- Authentication ---\n// export async function mockLogin(email) {\n//   ensure();\n//   await delay(100);\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return user;\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // --- Detailed User CRUD ---\n// export async function listUsers() {\n//     ensure();\n//     await delay(100);\n//     return JSON.parse(JSON.stringify(users));\n// }\n\n// export async function addUser(u) {\n//     await delay(100);\n//     users.push(u);\n//     saveDetailedUsers(users);\n//     return u;\n// }\n\n// export async function updateUser(updatedUser) {\n//     await delay(100);\n//     const index = users.findIndex(u => u.id === updatedUser.id);\n//     if (index === -1) {\n//         throw new Error('User not found');\n//     }\n//     users[index] = { ...users[index], ...updatedUser };\n//     saveDetailedUsers(users);\n//     return users[index];\n// }\n\n// export async function deleteUser(userId) {\n//     await delay(100);\n//     const initialLength = users.length;\n//     users = users.filter(u => u.id !== userId);\n//     if (users.length === initialLength) {\n//         throw new Error('User not found');\n//     }\n//     saveDetailedUsers(users);\n//     return { success: true, userId };\n// }\n\n// // --- Projects ---\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   const projects = JSON.parse(localStorage.getItem(KEY.PROJECTS));\n//   return Promise.resolve(projects.find(x => x.id === id));\n// }\n\n// export function addProject(p) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// export function updateProject(id, updatedProject) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const idx = arr.findIndex((p) => p.id === id);\n//   if (idx >= 0) {\n//     const existingProject = arr[idx];\n//     arr[idx] = {\n//       ...existingProject,\n//       ...updatedProject,\n//       description: updatedProject.description !== undefined ? updatedProject.description : existingProject.description,\n//       leads: updatedProject.leads !== undefined ? updatedProject.leads : existingProject.leads\n//     };\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject(new Error('Project not found'));\n// }\n\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const filteredProjects = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(filteredProjects));\n\n//   // Also delete epics belonging to this project\n//   const epicsArr = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\n//   const filteredEpics = epicsArr.filter(e => e.projectId !== id);\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(filteredEpics));\n\n//   // Also delete issues belonging to this project\n//   const issuesArr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const newIssues = issuesArr.filter(i => i.projectId !== id);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(newIssues));\n\n//   return Promise.resolve();\n// }\n\n// // --- Epics (New/Modified) ---\n// export async function listEpics(projectId = null) {\n//   ensure();\n//   await delay(100);\n//   let epics = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\n//   if (projectId) {\n//     epics = epics.filter(epic => epic.projectId === projectId);\n//   }\n//   return epics;\n// }\n\n// export async function createEpicAPI(projectId, epicName) {\n//   ensure();\n//   await delay(100);\n//   const epics = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\n//   const newEpic = {\n//     id: 'e' + uuidv4().slice(0, 8), // Generate a unique epic ID\n//     projectId,\n//     name: epicName\n//   };\n//   epics.push(newEpic);\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   return newEpic;\n// }\n\n// export async function deleteEpicAPI(epicId, projectId) {\n//   ensure();\n//   await delay(100);\n//   let epics = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\n//   const initialLength = epics.length;\n//   epics = epics.filter(epic => epic.id !== epicId || (projectId && epic.projectId !== projectId));\n//   if (epics.length === initialLength) {\n//       throw new Error('Epic not found or does not belong to the specified project.');\n//   }\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n\n//   // Also delete issues within this epic\n//   let issues = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   issues = issues.filter(issue => issue.epic !== epicId);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n\n//   return { success: true, epicId };\n// }\n\n// // --- Issues ---\n// export function listIssues(projectId = null) { // Modified to accept projectId\n//   ensure();\n//   let arr = JSON.parse(localStorage.getItem(KEY.ISSUES));\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId); // Filter by projectId\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   const issues = JSON.parse(localStorage.getItem(KEY.ISSUES));\n//   return Promise.resolve(issues.find(x => x.id === id));\n// }\n\n// export function createIssue(data) {\n//   if (!data.projectId || !data.epic) { // Ensure both projectId and epic are present\n//     return Promise.reject(new Error(\"Project ID and Epic ID are required to create an issue\"));\n//   }\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject(new Error('Issue not found'));\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// // --- Assets ---\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)));\n// }\n\n// export function addAsset(a) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n//   arr.push(a);\n//   localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n//   return Promise.resolve(a);\n// }\n\n// // --- Notifications ---\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n//   }\n//   return Promise.resolve();\n// }\n\n// // --- Styles and Utility Functions (Unchanged) ---\n\n// const STYLES = {\n//   container: {\n//     maxWidth: 'min(90vw, 1200px)',\n//     margin: '0 0 0 2vw',\n//     padding: 'clamp(1rem, 2vw, 1.5rem)',\n//     fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif\",\n//     backgroundColor: '#f8fafc',\n//     minHeight: '100vh',\n//     boxSizing: 'border-box',\n//   },\n//   header: {\n//     background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n//     color: 'white',\n//     padding: 'clamp(1.5rem, 4vw, 2rem)',\n//     borderRadius: '12px',\n//     marginBottom: 'clamp(1rem, 3vw, 1.5rem)',\n//     marginLeft: '0',\n//     boxShadow: '0 10px 30px rgba(0,0,0,0.1)',\n//     width: '100%',\n//     boxSizing: 'border-box',\n//   },\n//   card: {\n//     backgroundColor: 'white',\n//     borderRadius: '12px',\n//     padding: 'clamp(1rem, 3vw, 1.5rem)',\n//     marginBottom: 'clamp(0.75rem, 2vw, 1rem)',\n//     marginLeft: '0',\n//     boxShadow: '0 4px 20px rgba(0,0,0,0.08)',\n//     border: '1px solid rgba(0,0,0,0.05)',\n//     transition: 'all 0.3s ease',\n//     width: '100%',\n//     boxSizing: 'border-box',\n//   },\n//   table: {\n//     width: '100%',\n//     borderCollapse: 'separate',\n//     borderSpacing: '0',\n//     borderRadius: '12px',\n//     overflow: 'hidden',\n//     boxShadow: '0 4px 20px rgba(0,0,0,0.08)',\n//     marginLeft: '0',\n//     overflowX: 'auto',\n//   },\n//   userSection: {\n//     marginLeft: '0',\n//     paddingLeft: '0',\n//     alignSelf: 'flex-start',\n//     width: '100%',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'flex-start',\n//   },\n//   button: {\n//     padding: 'clamp(0.5rem, 1.5vw, 0.75rem) clamp(1rem, 2vw, 1.5rem)',\n//     borderRadius: '8px',\n//     border: 'none',\n//     background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n//     color: 'white',\n//     cursor: 'pointer',\n//     transition: 'all 0.3s ease',\n//   },\n//   buttonHover: {\n//     opacity: '0.9',\n//     transform: 'translateY(-2px)',\n//   },\n//   avatar: {\n//     width: 'clamp(2rem, 8vw, 2.5rem)',\n//     height: 'clamp(2rem, 8vw, 2.5rem)',\n//     borderRadius: '50%',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontSize: 'clamp(0.8rem, 2vw, 1rem)',\n//     color: 'white',\n//     fontWeight: '600',\n//   },\n//   badge: {\n//     padding: 'clamp(0.25rem, 1vw, 0.5rem) clamp(0.5rem, 1.5vw, 0.75rem)',\n//     borderRadius: '12px',\n//     fontSize: 'clamp(0.7rem, 1.5vw, 0.9rem)',\n//     fontWeight: '500',\n//   },\n//   status: {\n//     todo: { backgroundColor: '#e2e8f0', color: '#4a5568' },\n//     inprogress: { backgroundColor: '#fefcbf', color: '#744210' },\n//     done: { backgroundColor: '#c6f6d5', color: '#276749' },\n//     backlog: { backgroundColor: '#e0f2f7', color: '#01579b' }, // Added backlog status color\n//     analysis: { backgroundColor: '#fbe9e7', color: '#bf360c' },\n//     blocked: { backgroundColor: '#ffcdd2', color: '#b71c1c' },\n//     'code review': { backgroundColor: '#e8eaf6', color: '#3f51b5' },\n//     qa: { backgroundColor: '#e0f7fa', color: '#006064' },\n//     milestone: { backgroundColor: '#fce4ec', color: '#ad1457' },\n//   },\n//   priority: {\n//     P1: { backgroundColor: '#fed7d7', color: '#9b2c2c' },\n//     P2: { backgroundColor: '#fefcbf', color: '#744210' },\n//     P3: { backgroundColor: '#c6f6d5', color: '#276749' },\n//   },\n//   input: {\n//     padding: 'clamp(0.5rem, 1.5vw, 0.75rem)',\n//     borderRadius: '8px',\n//     border: '1px solid #e2e8f0',\n//     fontSize: 'clamp(0.8rem, 2vw, 1rem)',\n//     width: '100%',\n//     boxSizing: 'border-box',\n//   },\n// };\n\n// const globalStyles = `\n// @keyframes spin {\n//   0% { transform: rotate(0deg); }\n//   100% { transform: rotate(360deg); }\n// }\n// @media (max-width: 768px) {\n//   .container { padding: 1rem; margin: 0; }\n//   .header { padding: 1.2rem; margin-bottom: 1rem; border-radius: 8px; }\n//   .card { padding: 1rem; margin-bottom: 0.75rem; border-radius: 8px; }\n//   .table { font-size: 0.9rem; }\n//   .table th, .table td { padding: 0.5rem; }\n//   .button { padding: 0.5rem 1rem; font-size: 0.9rem; }\n//   .avatar { width: 2rem; height: 2rem; font-size: 0.9rem; }\n// }\n// @media (max-width: 480px) {\n//   .container { padding: 0.5rem; }\n//   .header { padding: 1rem; margin-bottom: 0.75rem; }\n//   .card { padding: 0.75rem; margin-bottom: 0.5rem; }\n//   .table { font-size: 0.8rem; }\n//   .button { padding: 0.4rem 0.8rem; font-size: 0.8rem; }\n//   .input { padding: 0.5rem; font-size: 0.9rem; }\n// }\n// `;\n\n// if (typeof document !== 'undefined') {\n//   const styleSheet = document.createElement('style');\n//   styleSheet.textContent = globalStyles;\n//   document.head.appendChild(styleSheet);\n// }\n\n// export { STYLES };\n\n// export function getUserAvatarStyle(name) {\n//   return { ...STYLES.avatar, backgroundColor: stringToColor(name) };\n// }\n\n// function stringToColor(str) {\n//   let hash = 0;\n//   for (let i = 0; i < str.length; i++) {\n//     hash = str.charCodeAt(i) + ((hash << 5) - hash);\n//   }\n//   const hue = hash % 360;\n//   return `hsl(${hue}, 70%, 60%)`;\n// }\n\n// export function getStatusBadgeStyle(status) {\n//   return { ...STYLES.badge, ...STYLES.status[status] };\n// }\n\n// export function getPriorityBadgeStyle(priority) {\n//   return { ...STYLES.badge, ...STYLES.priority[priority] };\n// }\n\n// export function withHover(baseStyle, hoverStyle = STYLES.buttonHover) {\n//   return {\n//     ...baseStyle,\n//     ':hover': hoverStyle\n//   };\n// }\n\n// export function getCardStyle(variant = 'default') {\n//   const variants = {\n//     default: STYLES.card,\n//     elevated: { ...STYLES.card, boxShadow: '0 8px 30px rgba(0,0,0,0.12)' },\n//     bordered: { ...STYLES.card, border: '2px solid #e2e8f0', boxShadow: 'none' }\n//   };\n//   return variants[variant] || variants.default;\n// }\n\n// export function getButtonStyle(variant = 'primary') {\n//   const variants = {\n//     primary: STYLES.button,\n//     secondary: {\n//       ...STYLES.button,\n//       background: 'linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)',\n//       color: '#4a5568',\n//       boxShadow: '0 4px 15px rgba(0,0,0,0.1)'\n//     },\n//     danger: {\n//       ...STYLES.button,\n//       background: 'linear-gradient(135deg, #fc8181 0%, #f56565 100%)',\n//       boxShadow: '0 4px 15px rgba(245, 101, 101, 0.3)'\n//     }\n//   };\n//   return variants[variant] || variants.primary;\n// }\n\n// export function getInputStyle(variant = 'default') {\n//   const variants = {\n//     default: STYLES.input,\n//     search: {\n//       ...STYLES.input,\n//       backgroundImage: 'url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' fill=\\'none\\' viewBox=\\'0 0 24 24\\' stroke=\\'%2394a3b8\\'%3E%3Cpath stroke-linecap=\\'round\\' stroke-linejoin=\\'round\\' stroke-width=\\'2\\' d=\\'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\' /%3E%3C/svg%3E\")',\n//       backgroundRepeat: 'no-repeat',\n//       backgroundPosition: '12px center',\n//       backgroundSize: 'clamp(16px, 4vw, 18px)',\n//       paddingLeft: 'clamp(2rem, 5vw, 2.5rem)',\n//     }\n//   };\n//   return variants[variant] || variants.default;\n// }\n\n// export function getUserSectionStyle() {\n//   return {\n//     ...STYLES.userSection,\n//     width: '100%',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'flex-start',\n//   };\n// }","map":{"version":3,"names":[],"sources":["C:/Users/battina srinuvasurao/OneDrive/Desktop/AdminTicket/TicketingTool/src/services/mockApi.js"],"sourcesContent":["\r\n\r\n\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\n// // --- Local Storage Keys ---\r\n// const KEY = {\r\n//   USER: 'tf_user_v3',\r\n//   USERS: 'tf_users_v3',\r\n//   PROJECTS: 'tf_projects_v3',\r\n//   EPICS: 'tf_epics_v3', // New key for epics\r\n//   ISSUES: 'tf_issues_v3',\r\n//   ASSETS: 'tf_assets_v3',\r\n//   NOTIFS: 'tf_notifs_v3',\r\n// };\r\n\r\n// // --- Detailed Initial User Data ---\r\n// const detailedInitialUsers = [\r\n//     {\r\n//         id: 'u1',\r\n//         firstName: 'Admin',\r\n//         lastName: 'User',\r\n//         name: 'Admin User',\r\n//         email: 'admin@demo.com',\r\n//         role: 'Admin',\r\n//         department: 'Management',\r\n//         active: true,\r\n//         language: 'English',\r\n//         mobileNumber: '555-1001',\r\n//         dateFormat: 'YYYY-MM-DD',\r\n//         passwordResetNeeded: false,\r\n//         profileFile: null,\r\n//     },\r\n//     {\r\n//         id: 'u2',\r\n//         firstName: 'Dev',\r\n//         lastName: 'Alice',\r\n//         name: 'Dev Alice',\r\n//         email: 'alice@demo.com',\r\n//         role: 'Developer',\r\n//         department: 'Engineering',\r\n//         active: true,\r\n//         language: 'Spanish',\r\n//         mobileNumber: '555-2002',\r\n//         dateFormat: 'MM/DD/YYYY',\r\n//         passwordResetNeeded: true,\r\n//         profileFile: null,\r\n//     },\r\n//     {\r\n//         id: 'u3',\r\n//         firstName: 'Manager',\r\n//         lastName: 'Bob',\r\n//         name: 'Manager Bob',\r\n//         email: 'bob@demo.com',\r\n//         role: 'Manager',\r\n//         department: 'Sales',\r\n//         active: false,\r\n//         language: 'French',\r\n//         mobileNumber: '555-3003',\r\n//         dateFormat: 'DD/MM/YYYY',\r\n//         passwordResetNeeded: false,\r\n//         profileFile: null,\r\n//     },\r\n// ];\r\n\r\n// // --- Utility Functions for LocalStorage (Enhanced for detailed users) ---\r\n\r\n// const loadDetailedUsers = () => {\r\n//     try {\r\n//         const storedData = localStorage.getItem(KEY.USERS);\r\n//         if (storedData) {\r\n//             const users = JSON.parse(storedData);\r\n//             if (users.length > 0 && !users[0].firstName) {\r\n//                  console.warn(\"User data structure outdated. Re-initializing with detailed initial data.\");\r\n//                  saveDetailedUsers(detailedInitialUsers);\r\n//                  return detailedInitialUsers;\r\n//             }\r\n//             return users;\r\n//         }\r\n//     } catch (error) {\r\n//         console.error(\"Error reading localStorage:\", error);\r\n//     }\r\n//     saveDetailedUsers(detailedInitialUsers);\r\n//     return detailedInitialUsers;\r\n// };\r\n\r\n// const saveDetailedUsers = (users) => {\r\n//     try {\r\n//         localStorage.setItem(KEY.USERS, JSON.stringify(users));\r\n//     } catch (error) {\r\n//         console.error(\"Error writing to localStorage:\", error);\r\n//     }\r\n// };\r\n\r\n// let users = loadDetailedUsers();\r\n\r\n// function ensure() {\r\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\r\n//     const projects = [\r\n//       { id: 'mark', key: 'MARK', name: 'Mark Project', description: 'Mark project description', leads: ['u3'] }, // Changed ID\r\n//       { id: 'novya', key: 'NOVYA', name: 'Novya Project', description: 'Novya project description', leads: ['u2'] }, // Changed ID\r\n//       { id: 'epsilon', key: 'EPSILON', name: 'Epsilon Project', description: 'Epsilon project description', leads: ['u1'] },\r\n//     ];\r\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\r\n//   }\r\n\r\n//   // New: Initialize Epics\r\n//   if (!localStorage.getItem(KEY.EPICS)) {\r\n//     const initialEpics = [\r\n//       { id: 'e1', projectId: 'mark', name: 'Frontend Epic' },\r\n//       { id: 'e2', projectId: 'mark', name: 'Backend Epic' },\r\n//       { id: 'e3', projectId: 'novya', name: 'Database Optimization' },\r\n//       { id: 'e4', projectId: 'epsilon', name: 'UI/UX Redesign' },\r\n//     ];\r\n//     localStorage.setItem(KEY.EPICS, JSON.stringify(initialEpics));\r\n//   }\r\n\r\n//   if (!localStorage.getItem(KEY.ISSUES)) {\r\n//     const issues = [\r\n//       { id: 'i1', projectId: 'mark', epic: 'e1', epicName: 'Frontend Epic', title: 'Setup Mark repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\r\n//       { id: 'i2', projectId: 'mark', epic: 'e1', epicName: 'Frontend Epic', title: 'Login Mark bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\r\n//       { id: 'i3', projectId: 'novya', epic: 'e3', epicName: 'Database Optimization', title: 'OAuth Novya', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() },\r\n//       { id: 'i4', projectId: 'novya', epic: 'e3', epicName: 'Database Optimization', title: 'Novya Data Migration', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 8, createdAt: Date.now() },\r\n//       { id: 'i5', projectId: 'epsilon', epic: 'e4', epicName: 'UI/UX Redesign', title: 'Epsilon Home Page Wireframe', status: 'backlog', priority: 'P3', assignee: 'u1', type: 'Story', storyPoints: 5, createdAt: Date.now() },\r\n//     ];\r\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\r\n//   }\r\n//   if (!localStorage.getItem(KEY.ASSETS)) {\r\n//     localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\r\n//   }\r\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\r\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\r\n//   }\r\n// }\r\n\r\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n// // --- Authentication ---\r\n// export async function mockLogin(email) {\r\n//   ensure();\r\n//   await delay(100);\r\n//   const user = users.find(u => u.email === email) || users[0];\r\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\r\n//   return user;\r\n// }\r\n\r\n// export function logout() {\r\n//   localStorage.removeItem(KEY.USER);\r\n//   return Promise.resolve();\r\n// }\r\n\r\n// export function getCurrentUser() {\r\n//   const s = localStorage.getItem(KEY.USER);\r\n//   return s ? JSON.parse(s) : null;\r\n// }\r\n\r\n// // --- Detailed User CRUD ---\r\n// export async function listUsers() {\r\n//     ensure();\r\n//     await delay(100);\r\n//     return JSON.parse(JSON.stringify(users));\r\n// }\r\n\r\n// export async function addUser(u) {\r\n//     await delay(100);\r\n//     users.push(u);\r\n//     saveDetailedUsers(users);\r\n//     return u;\r\n// }\r\n\r\n// export async function updateUser(updatedUser) {\r\n//     await delay(100);\r\n//     const index = users.findIndex(u => u.id === updatedUser.id);\r\n//     if (index === -1) {\r\n//         throw new Error('User not found');\r\n//     }\r\n//     users[index] = { ...users[index], ...updatedUser };\r\n//     saveDetailedUsers(users);\r\n//     return users[index];\r\n// }\r\n\r\n// export async function deleteUser(userId) {\r\n//     await delay(100);\r\n//     const initialLength = users.length;\r\n//     users = users.filter(u => u.id !== userId);\r\n//     if (users.length === initialLength) {\r\n//         throw new Error('User not found');\r\n//     }\r\n//     saveDetailedUsers(users);\r\n//     return { success: true, userId };\r\n// }\r\n\r\n// // --- Projects ---\r\n// export function listProjects() {\r\n//   ensure();\r\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\r\n// }\r\n\r\n// export function getProject(id) {\r\n//   ensure();\r\n//   const projects = JSON.parse(localStorage.getItem(KEY.PROJECTS));\r\n//   return Promise.resolve(projects.find(x => x.id === id));\r\n// }\r\n\r\n// export function addProject(p) {\r\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\r\n//   arr.push(p);\r\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\r\n//   return Promise.resolve(p);\r\n// }\r\n\r\n// export function updateProject(id, updatedProject) {\r\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\r\n//   const idx = arr.findIndex((p) => p.id === id);\r\n//   if (idx >= 0) {\r\n//     const existingProject = arr[idx];\r\n//     arr[idx] = {\r\n//       ...existingProject,\r\n//       ...updatedProject,\r\n//       description: updatedProject.description !== undefined ? updatedProject.description : existingProject.description,\r\n//       leads: updatedProject.leads !== undefined ? updatedProject.leads : existingProject.leads\r\n//     };\r\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\r\n//     return Promise.resolve(arr[idx]);\r\n//   }\r\n//   return Promise.reject(new Error('Project not found'));\r\n// }\r\n\r\n// export function deleteProject(id) {\r\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\r\n//   const filteredProjects = arr.filter(p => p.id !== id);\r\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(filteredProjects));\r\n\r\n//   // Also delete epics belonging to this project\r\n//   const epicsArr = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\r\n//   const filteredEpics = epicsArr.filter(e => e.projectId !== id);\r\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(filteredEpics));\r\n\r\n//   // Also delete issues belonging to this project\r\n//   const issuesArr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\r\n//   const newIssues = issuesArr.filter(i => i.projectId !== id);\r\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(newIssues));\r\n\r\n//   return Promise.resolve();\r\n// }\r\n\r\n// // --- Epics (New/Modified) ---\r\n// export async function listEpics(projectId = null) {\r\n//   ensure();\r\n//   await delay(100);\r\n//   let epics = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\r\n//   if (projectId) {\r\n//     epics = epics.filter(epic => epic.projectId === projectId);\r\n//   }\r\n//   return epics;\r\n// }\r\n\r\n// export async function createEpicAPI(projectId, epicName) {\r\n//   ensure();\r\n//   await delay(100);\r\n//   const epics = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\r\n//   const newEpic = {\r\n//     id: 'e' + uuidv4().slice(0, 8), // Generate a unique epic ID\r\n//     projectId,\r\n//     name: epicName\r\n//   };\r\n//   epics.push(newEpic);\r\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\r\n//   return newEpic;\r\n// }\r\n\r\n// export async function deleteEpicAPI(epicId, projectId) {\r\n//   ensure();\r\n//   await delay(100);\r\n//   let epics = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\r\n//   const initialLength = epics.length;\r\n//   epics = epics.filter(epic => epic.id !== epicId || (projectId && epic.projectId !== projectId));\r\n//   if (epics.length === initialLength) {\r\n//       throw new Error('Epic not found or does not belong to the specified project.');\r\n//   }\r\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\r\n\r\n//   // Also delete issues within this epic\r\n//   let issues = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\r\n//   issues = issues.filter(issue => issue.epic !== epicId);\r\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\r\n\r\n//   return { success: true, epicId };\r\n// }\r\n\r\n\r\n// // --- Issues ---\r\n// export function listIssues(projectId = null) { // Modified to accept projectId\r\n//   ensure();\r\n//   let arr = JSON.parse(localStorage.getItem(KEY.ISSUES));\r\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId); // Filter by projectId\r\n//   return Promise.resolve(arr);\r\n// }\r\n\r\n// export function getIssue(id) {\r\n//   ensure();\r\n//   const issues = JSON.parse(localStorage.getItem(KEY.ISSUES));\r\n//   return Promise.resolve(issues.find(x => x.id === id));\r\n// }\r\n\r\n// export function createIssue(data) {\r\n//   if (!data.projectId || !data.epic) { // Ensure both projectId and epic are present\r\n//     return Promise.reject(new Error(\"Project ID and Epic ID are required to create an issue\"));\r\n//   }\r\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\r\n//   const id = 'i' + Math.floor(Math.random() * 100000);\r\n//   const issue = { ...data, id, createdAt: Date.now() };\r\n//   arr.push(issue);\r\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\r\n//   return Promise.resolve(issue);\r\n// }\r\n\r\n// export function updateIssue(id, patch) {\r\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\r\n//   const idx = arr.findIndex(x => x.id === id);\r\n//   if (idx >= 0) {\r\n//     arr[idx] = { ...arr[idx], ...patch };\r\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\r\n//     return Promise.resolve(arr[idx]);\r\n//   }\r\n//   return Promise.reject(new Error('Issue not found'));\r\n// }\r\n\r\n// export function moveIssue(id, status) {\r\n//   return updateIssue(id, { status });\r\n// }\r\n\r\n// // --- Assets ---\r\n// export function listAssets() {\r\n//   ensure();\r\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)));\r\n// }\r\n\r\n// export function addAsset(a) {\r\n//   const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\r\n//   arr.push(a);\r\n//   localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\r\n//   return Promise.resolve(a);\r\n// }\r\n\r\n// // --- Notifications ---\r\n// export function listNotifs(userId) {\r\n//   ensure();\r\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\r\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\r\n// }\r\n\r\n// export function markNotif(id) {\r\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\r\n//   const idx = arr.findIndex(n => n.id === id);\r\n//   if (idx >= 0) {\r\n//     arr[idx].read = true;\r\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\r\n//   }\r\n//   return Promise.resolve();\r\n// }\r\n\r\n// // --- Styles and Utility Functions (Unchanged) ---\r\n\r\n// const STYLES = {\r\n//   container: {\r\n//     maxWidth: 'min(90vw, 1200px)',\r\n//     margin: '0 0 0 2vw',\r\n//     padding: 'clamp(1rem, 2vw, 1.5rem)',\r\n//     fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif\",\r\n//     backgroundColor: '#f8fafc',\r\n//     minHeight: '100vh',\r\n//     boxSizing: 'border-box',\r\n//   },\r\n//   header: {\r\n//     background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n//     color: 'white',\r\n//     padding: 'clamp(1.5rem, 4vw, 2rem)',\r\n//     borderRadius: '12px',\r\n//     marginBottom: 'clamp(1rem, 3vw, 1.5rem)',\r\n//     marginLeft: '0',\r\n//     boxShadow: '0 10px 30px rgba(0,0,0,0.1)',\r\n//     width: '100%',\r\n//     boxSizing: 'border-box',\r\n//   },\r\n//   card: {\r\n//     backgroundColor: 'white',\r\n//     borderRadius: '12px',\r\n//     padding: 'clamp(1rem, 3vw, 1.5rem)',\r\n//     marginBottom: 'clamp(0.75rem, 2vw, 1rem)',\r\n//     marginLeft: '0',\r\n//     boxShadow: '0 4px 20px rgba(0,0,0,0.08)',\r\n//     border: '1px solid rgba(0,0,0,0.05)',\r\n//     transition: 'all 0.3s ease',\r\n//     width: '100%',\r\n//     boxSizing: 'border-box',\r\n//   },\r\n//   table: {\r\n//     width: '100%',\r\n//     borderCollapse: 'separate',\r\n//     borderSpacing: '0',\r\n//     borderRadius: '12px',\r\n//     overflow: 'hidden',\r\n//     boxShadow: '0 4px 20px rgba(0,0,0,0.08)',\r\n//     marginLeft: '0',\r\n//     overflowX: 'auto',\r\n//   },\r\n//   userSection: {\r\n//     marginLeft: '0',\r\n//     paddingLeft: '0',\r\n//     alignSelf: 'flex-start',\r\n//     width: '100%',\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     alignItems: 'flex-start',\r\n//   },\r\n//   button: {\r\n//     padding: 'clamp(0.5rem, 1.5vw, 0.75rem) clamp(1rem, 2vw, 1.5rem)',\r\n//     borderRadius: '8px',\r\n//     border: 'none',\r\n//     background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n//     color: 'white',\r\n//     cursor: 'pointer',\r\n//     transition: 'all 0.3s ease',\r\n//   },\r\n//   buttonHover: {\r\n//     opacity: '0.9',\r\n//     transform: 'translateY(-2px)',\r\n//   },\r\n//   avatar: {\r\n//     width: 'clamp(2rem, 8vw, 2.5rem)',\r\n//     height: 'clamp(2rem, 8vw, 2.5rem)',\r\n//     borderRadius: '50%',\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//     fontSize: 'clamp(0.8rem, 2vw, 1rem)',\r\n//     color: 'white',\r\n//     fontWeight: '600',\r\n//   },\r\n//   badge: {\r\n//     padding: 'clamp(0.25rem, 1vw, 0.5rem) clamp(0.5rem, 1.5vw, 0.75rem)',\r\n//     borderRadius: '12px',\r\n//     fontSize: 'clamp(0.7rem, 1.5vw, 0.9rem)',\r\n//     fontWeight: '500',\r\n//   },\r\n//   status: {\r\n//     todo: { backgroundColor: '#e2e8f0', color: '#4a5568' },\r\n//     inprogress: { backgroundColor: '#fefcbf', color: '#744210' },\r\n//     done: { backgroundColor: '#c6f6d5', color: '#276749' },\r\n//     backlog: { backgroundColor: '#e0f2f7', color: '#01579b' }, // Added backlog status color\r\n//     analysis: { backgroundColor: '#fbe9e7', color: '#bf360c' },\r\n//     blocked: { backgroundColor: '#ffcdd2', color: '#b71c1c' },\r\n//     'code review': { backgroundColor: '#e8eaf6', color: '#3f51b5' },\r\n//     qa: { backgroundColor: '#e0f7fa', color: '#006064' },\r\n//     milestone: { backgroundColor: '#fce4ec', color: '#ad1457' },\r\n//   },\r\n//   priority: {\r\n//     P1: { backgroundColor: '#fed7d7', color: '#9b2c2c' },\r\n//     P2: { backgroundColor: '#fefcbf', color: '#744210' },\r\n//     P3: { backgroundColor: '#c6f6d5', color: '#276749' },\r\n//   },\r\n//   input: {\r\n//     padding: 'clamp(0.5rem, 1.5vw, 0.75rem)',\r\n//     borderRadius: '8px',\r\n//     border: '1px solid #e2e8f0',\r\n//     fontSize: 'clamp(0.8rem, 2vw, 1rem)',\r\n//     width: '100%',\r\n//     boxSizing: 'border-box',\r\n//   },\r\n// };\r\n\r\n// const globalStyles = `\r\n// @keyframes spin {\r\n//   0% { transform: rotate(0deg); }\r\n//   100% { transform: rotate(360deg); }\r\n// }\r\n// @media (max-width: 768px) {\r\n//   .container { padding: 1rem; margin: 0; }\r\n//   .header { padding: 1.2rem; margin-bottom: 1rem; border-radius: 8px; }\r\n//   .card { padding: 1rem; margin-bottom: 0.75rem; border-radius: 8px; }\r\n//   .table { font-size: 0.9rem; }\r\n//   .table th, .table td { padding: 0.5rem; }\r\n//   .button { padding: 0.5rem 1rem; font-size: 0.9rem; }\r\n//   .avatar { width: 2rem; height: 2rem; font-size: 0.9rem; }\r\n// }\r\n// @media (max-width: 480px) {\r\n//   .container { padding: 0.5rem; }\r\n//   .header { padding: 1rem; margin-bottom: 0.75rem; }\r\n//   .card { padding: 0.75rem; margin-bottom: 0.5rem; }\r\n//   .table { font-size: 0.8rem; }\r\n//   .button { padding: 0.4rem 0.8rem; font-size: 0.8rem; }\r\n//   .input { padding: 0.5rem; font-size: 0.9rem; }\r\n// }\r\n// `;\r\n\r\n// if (typeof document !== 'undefined') {\r\n//   const styleSheet = document.createElement('style');\r\n//   styleSheet.textContent = globalStyles;\r\n//   document.head.appendChild(styleSheet);\r\n// }\r\n\r\n\r\n// export { STYLES };\r\n\r\n// export function getUserAvatarStyle(name) {\r\n//   return { ...STYLES.avatar, backgroundColor: stringToColor(name) };\r\n// }\r\n\r\n// function stringToColor(str) {\r\n//   let hash = 0;\r\n//   for (let i = 0; i < str.length; i++) {\r\n//     hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n//   }\r\n//   const hue = hash % 360;\r\n//   return `hsl(${hue}, 70%, 60%)`;\r\n// }\r\n\r\n// export function getStatusBadgeStyle(status) {\r\n//   return { ...STYLES.badge, ...STYLES.status[status] };\r\n// }\r\n\r\n// export function getPriorityBadgeStyle(priority) {\r\n//   return { ...STYLES.badge, ...STYLES.priority[priority] };\r\n// }\r\n\r\n// export function withHover(baseStyle, hoverStyle = STYLES.buttonHover) {\r\n//   return {\r\n//     ...baseStyle,\r\n//     ':hover': hoverStyle\r\n//   };\r\n// }\r\n\r\n// export function getCardStyle(variant = 'default') {\r\n//   const variants = {\r\n//     default: STYLES.card,\r\n//     elevated: { ...STYLES.card, boxShadow: '0 8px 30px rgba(0,0,0,0.12)' },\r\n//     bordered: { ...STYLES.card, border: '2px solid #e2e8f0', boxShadow: 'none' }\r\n//   };\r\n//   return variants[variant] || variants.default;\r\n// }\r\n\r\n// export function getButtonStyle(variant = 'primary') {\r\n//   const variants = {\r\n//     primary: STYLES.button,\r\n//     secondary: {\r\n//       ...STYLES.button,\r\n//       background: 'linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)',\r\n//       color: '#4a5568',\r\n//       boxShadow: '0 4px 15px rgba(0,0,0,0.1)'\r\n//     },\r\n//     danger: {\r\n//       ...STYLES.button,\r\n//       background: 'linear-gradient(135deg, #fc8181 0%, #f56565 100%)',\r\n//       boxShadow: '0 4px 15px rgba(245, 101, 101, 0.3)'\r\n//     }\r\n//   };\r\n//   return variants[variant] || variants.primary;\r\n// }\r\n\r\n// export function getInputStyle(variant = 'default') {\r\n//   const variants = {\r\n//     default: STYLES.input,\r\n//     search: {\r\n//       ...STYLES.input,\r\n//       backgroundImage: 'url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' fill=\\'none\\' viewBox=\\'0 0 24 24\\' stroke=\\'%2394a3b8\\'%3E%3Cpath stroke-linecap=\\'round\\' stroke-linejoin=\\'round\\' stroke-width=\\'2\\' d=\\'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\' /%3E%3C/svg%3E\")',\r\n//       backgroundRepeat: 'no-repeat',\r\n//       backgroundPosition: '12px center',\r\n//       backgroundSize: 'clamp(16px, 4vw, 18px)',\r\n//       paddingLeft: 'clamp(2rem, 5vw, 2.5rem)',\r\n//     }\r\n//   };\r\n//   return variants[variant] || variants.default;\r\n// }\r\n\r\n// export function getUserSectionStyle() {\r\n//   return {\r\n//     ...STYLES.userSection,\r\n//     width: '100%',\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     alignItems: 'flex-start',\r\n//   };\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}