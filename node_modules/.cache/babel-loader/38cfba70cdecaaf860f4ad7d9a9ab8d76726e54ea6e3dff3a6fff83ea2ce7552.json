{"ast":null,"code":"\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiChevronUp, FiChevronDown, FiUsers, FiCalendar } from 'react-icons/fi';\n// import { formatDistanceToNow } from 'date-fns';\n\n// // Reusable input component\n// function InputField({ label, value, onChange, icon: Icon, placeholder, maxLength }) {\n//   return (\n//     <div style={{ marginBottom: '1rem' }}>\n//       <label style={{ display: 'block', fontSize: '13px', fontWeight: 600, marginBottom: '0.25rem', color: '#172B4D' }}>\n//         {label}\n//       </label>\n//       <div style={{ display: 'flex', alignItems: 'center', border: '1px solid #DFE1E6', borderRadius: '4px', background: '#fff' }}>\n//         {Icon && <Icon style={{ marginLeft: '8px', color: '#6B778C' }} />}\n//         <input\n//           type=\"text\"\n//           value={value}\n//           onChange={onChange}\n//           placeholder={placeholder}\n//           maxLength={maxLength}\n//           style={{\n//             flex: 1,\n//             padding: '8px',\n//             border: 'none',\n//             outline: 'none',\n//             fontSize: '14px',\n//             borderRadius: '4px',\n//           }}\n//         />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n//   const [type, setType] = useState('Software');\n//   const [leadsInput, setLeadsInput] = useState(''); // store as plain text\n//   const [expanded, setExpanded] = useState({});\n//   const [editingId, setEditingId] = useState(null);\n//   const [editName, setEditName] = useState('');\n//   const [editKey, setEditKey] = useState('');\n//   const [editType, setEditType] = useState('');\n//   const [editLeadsInput, setEditLeadsInput] = useState('');\n\n//   useEffect(() => {\n//     loadProjects();\n//   }, []);\n\n//   const loadProjects = async () => {\n//     const data = await listProjects();\n//     setProjects(data);\n//   };\n\n//   const createProject = async () => {\n//     if (!name.trim()) return;\n//     const now = new Date().toISOString();\n//     const p = {\n//       id: uuidv4(),\n//       key: key.toUpperCase() || 'PRJ',\n//       name,\n//       type,\n//       leads: leadsInput\n//         ? leadsInput.split(',').map(l => l.trim()).filter(l => l)\n//         : ['Unassigned'],\n//       description: '',\n//       lastUpdated: now,\n//       createdAt: now,\n//     };\n//     await addProject(p);\n//     setName('');\n//     setKey('');\n//     setLeadsInput('');\n//     setType('Software');\n//     loadProjects();\n//   };\n\n//   const removeProject = async (id) => {\n//     await deleteProject(id);\n//     loadProjects();\n//   };\n\n//   const startEdit = (p) => {\n//     setEditingId(p.id);\n//     setEditName(p.name);\n//     setEditKey(p.key);\n//     setEditType(p.type);\n//     setEditLeadsInput(p.leads.join(', '));\n//   };\n\n//   const saveEdit = async (id) => {\n//     const updated = {\n//       ...projects.find(p => p.id === id),\n//       name: editName,\n//       key: editKey,\n//       type: editType,\n//       leads: editLeadsInput\n//         ? editLeadsInput.split(',').map(l => l.trim()).filter(l => l)\n//         : ['Unassigned'],\n//       lastUpdated: new Date().toISOString(),\n//     };\n//     await updateProject(id, updated);\n//     setEditingId(null);\n//     loadProjects();\n//   };\n\n//   return (\n//     <div style={{ display: 'flex', height: '100vh' }}>\n//       {/* Sidebar create project form */}\n//       <div style={{ width: '320px', borderRight: '1px solid #DFE1E6', padding: '1rem', background: '#F4F5F7' }}>\n//         <h2 style={{ fontSize: '16px', fontWeight: 'bold', marginBottom: '1rem' }}>Create Project</h2>\n\n//         <InputField label=\"Project Name\" value={name} onChange={e => setName(e.target.value)} placeholder=\"Enter project name\" />\n//         <InputField label=\"Project Key\" value={key} onChange={e => setKey(e.target.value)} placeholder=\"e.g. PROJ\" maxLength={10} />\n//         <InputField label=\"Project Type\" value={type} onChange={e => setType(e.target.value)} placeholder=\"Software, Business...\" />\n//         <InputField label=\"Leads (comma separated)\" value={leadsInput} onChange={e => setLeadsInput(e.target.value)} placeholder=\"John Doe, Jane Smith\" icon={FiUsers} />\n\n//         <button\n//           onClick={createProject}\n//           style={{\n//             width: '100%',\n//             background: '#0052CC',\n//             color: 'white',\n//             padding: '8px',\n//             border: 'none',\n//             borderRadius: '4px',\n//             cursor: 'pointer',\n//             display: 'flex',\n//             alignItems: 'center',\n//             justifyContent: 'center',\n//             fontSize: '14px',\n//           }}\n//         >\n//           <FiPlus style={{ marginRight: '6px' }} /> Create Project\n//         </button>\n//       </div>\n\n//       {/* Main project list */}\n//       <div style={{ flex: 1, padding: '2rem', overflowY: 'auto' }}>\n//         <h2 style={{ fontSize: '20px', fontWeight: 'bold', marginBottom: '1.5rem' }}>Projects</h2>\n\n//         <div style={{ display: 'grid', gap: '1rem', gridTemplateColumns: 'repeat(auto-fill, minmax(280px, 1fr))' }}>\n//           {projects.map(p => (\n//             <div\n//               key={p.id}\n//               style={{\n//                 background: '#fff',\n//                 border: '1px solid #DFE1E6',\n//                 borderRadius: '8px',\n//                 padding: '1rem',\n//                 display: 'flex',\n//                 flexDirection: 'column',\n//               }}\n//             >\n//               {editingId === p.id ? (\n//                 <>\n//                   <InputField label=\"Name\" value={editName} onChange={e => setEditName(e.target.value)} />\n//                   <InputField label=\"Key\" value={editKey} onChange={e => setEditKey(e.target.value)} />\n//                   <InputField label=\"Type\" value={editType} onChange={e => setEditType(e.target.value)} />\n//                   <InputField label=\"Leads\" value={editLeadsInput} onChange={e => setEditLeadsInput(e.target.value)} />\n//                   <div style={{ display: 'flex', gap: '0.5rem', marginTop: '0.5rem' }}>\n//                     <button onClick={() => saveEdit(p.id)} style={{ background: '#36B37E', color: '#fff', border: 'none', padding: '6px 10px', borderRadius: '4px', cursor: 'pointer' }}>\n//                       <FiCheck />\n//                     </button>\n//                     <button onClick={() => setEditingId(null)} style={{ background: '#FF5630', color: '#fff', border: 'none', padding: '6px 10px', borderRadius: '4px', cursor: 'pointer' }}>\n//                       <FiX />\n//                     </button>\n//                   </div>\n//                 </>\n//               ) : (\n//                 <>\n//                   <h3 style={{ fontSize: '16px', fontWeight: 'bold', marginBottom: '0.5rem' }}>\n//                     <Link to={`/projects/${p.id}`} style={{ color: '#0052CC', textDecoration: 'none' }}>\n//                       {p.name}\n//                     </Link>\n//                   </h3>\n//                   <p style={{ fontSize: '13px', color: '#6B778C', marginBottom: '0.5rem' }}>{p.type} Project</p>\n//                   <p style={{ fontSize: '13px', marginBottom: '0.5rem' }}>Key: {p.key}</p>\n//                   <p style={{ fontSize: '13px', marginBottom: '0.5rem' }}>Leads: {p.leads.join(', ')}</p>\n\n//                   <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '1rem' }}>\n//                     <div style={{ display: 'flex', gap: '0.5rem' }}>\n//                       <button onClick={() => startEdit(p)} style={{ background: '#FFAB00', color: '#fff', border: 'none', padding: '6px 10px', borderRadius: '4px', cursor: 'pointer' }}>\n//                         <FiEdit2 />\n//                       </button>\n//                       <button onClick={() => removeProject(p.id)} style={{ background: '#FF5630', color: '#fff', border: 'none', padding: '6px 10px', borderRadius: '4px', cursor: 'pointer' }}>\n//                         <FiTrash2 />\n//                       </button>\n//                     </div>\n//                     <button onClick={() => setExpanded({ ...expanded, [p.id]: !expanded[p.id] })} style={{ background: 'transparent', border: 'none', cursor: 'pointer', color: '#0052CC' }}>\n//                       {expanded[p.id] ? <FiChevronUp /> : <FiChevronDown />}\n//                     </button>\n//                   </div>\n\n//                   {expanded[p.id] && (\n//                     <div style={{ marginTop: '0.5rem', fontSize: '13px', color: '#172B4D' }}>\n//                       <p>{p.description || 'No description provided.'}</p>\n//                     </div>\n//                   )}\n//                 </>\n//               )}\n\n//               {/* Metadata */}\n//               <div\n//                 style={{\n//                   display: 'flex',\n//                   justifyContent: 'space-between',\n//                   marginTop: 'auto',\n//                   marginTop: '1rem',\n//                   paddingTop: '0.75rem',\n//                   borderTop: '1px solid #EBECF0',\n//                   fontSize: '12px',\n//                   color: '#6B778C',\n//                 }}\n//               >\n//                 <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n//                   <FiCalendar size={12} />\n//                   {p.createdAt ? (\n//                     <>Created {formatDistanceToNow(new Date(p.createdAt), { addSuffix: true })}</>\n//                   ) : (\n//                     <>Created just now</>\n//                   )}\n//                 </div>\n//                 <div>\n//                   {p.lastUpdated ? (\n//                     <>Updated {formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true })}</>\n//                   ) : (\n//                     <>Updated just now</>\n//                   )}\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n\n//           {projects.length === 0 && (\n//             <div\n//               style={{\n//                 gridColumn: '1 / -1',\n//                 textAlign: 'center',\n//                 padding: '3rem 2rem',\n//                 background: '#fff',\n//                 borderRadius: '8px',\n//                 border: '1px dashed #DFE1E6',\n//                 color: '#6B778C',\n//               }}\n//             >\n//               <p style={{ marginBottom: '1rem' }}>No projects yet.</p>\n//               <p style={{ fontSize: '14px' }}>Create your first project using the form on the left.</p>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n///////////////////////////////////  for responsiveness  //////////////////////////\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiChevronUp, FiChevronDown, FiUsers, FiCalendar, FiMenu, FiX as FiXIcon } from 'react-icons/fi';\n// import { formatDistanceToNow } from 'date-fns';\n\n// // Reusable input component\n// function InputField({ label, value, onChange, icon: Icon, placeholder, maxLength }) {\n//   return (\n//     <div style={{ marginBottom: '1rem' }}>\n//       <label style={{ display: 'block', fontSize: '13px', fontWeight: 600, marginBottom: '0.25rem', color: '#172B4D' }}>\n//         {label}\n//       </label>\n//       <div style={{ display: 'flex', alignItems: 'center', border: '1px solid #DFE1E6', borderRadius: '4px', background: '#fff' }}>\n//         {Icon && <Icon style={{ marginLeft: '8px', color: '#6B778C' }} />}\n//         <input\n//           type=\"text\"\n//           value={value}\n//           onChange={onChange}\n//           placeholder={placeholder}\n//           maxLength={maxLength}\n//           style={{\n//             flex: 1,\n//             padding: '8px',\n//             border: 'none',\n//             outline: 'none',\n//             fontSize: '14px',\n//             borderRadius: '4px',\n//           }}\n//         />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n//   const [type, setType] = useState('Software');\n//   const [leadsInput, setLeadsInput] = useState(''); // store as plain text\n//   const [expanded, setExpanded] = useState({});\n//   const [editingId, setEditingId] = useState(null);\n//   const [editName, setEditName] = useState('');\n//   const [editKey, setEditKey] = useState('');\n//   const [editType, setEditType] = useState('');\n//   const [editLeadsInput, setEditLeadsInput] = useState('');\n//   const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n//   const [sidebarOpen, setSidebarOpen] = useState(!isMobile);\n\n//   useEffect(() => {\n//     loadProjects();\n\n//     const handleResize = () => {\n//       const mobile = window.innerWidth < 768;\n//       setIsMobile(mobile);\n//       // Auto-close sidebar on mobile when resizing to mobile\n//       if (mobile) {\n//         setSidebarOpen(false);\n//       } else {\n//         setSidebarOpen(true);\n//       }\n//     };\n\n//     window.addEventListener('resize', handleResize);\n//     return () => window.removeEventListener('resize', handleResize);\n//   }, []);\n\n//   const loadProjects = async () => {\n//     const data = await listProjects();\n//     setProjects(data);\n//   };\n\n//   const createProject = async () => {\n//     if (!name.trim()) return;\n//     const now = new Date().toISOString();\n//     const p = {\n//       id: uuidv4(),\n//       key: key.toUpperCase() || 'PRJ',\n//       name,\n//       type,\n//       leads: leadsInput\n//         ? leadsInput.split(',').map(l => l.trim()).filter(l => l)\n//         : ['Unassigned'],\n//       description: '',\n//       lastUpdated: now,\n//       createdAt: now,\n//     };\n//     await addProject(p);\n//     setName('');\n//     setKey('');\n//     setLeadsInput('');\n//     setType('Software');\n//     loadProjects();\n\n//     // Close sidebar on mobile after creating project\n//     if (isMobile) {\n//       setSidebarOpen(false);\n//     }\n//   };\n\n//   const removeProject = async (id) => {\n//     await deleteProject(id);\n//     loadProjects();\n//   };\n\n//   const startEdit = (p) => {\n//     setEditingId(p.id);\n//     setEditName(p.name);\n//     setEditKey(p.key);\n//     setEditType(p.type);\n//     setEditLeadsInput(p.leads.join(', '));\n//   };\n\n//   const saveEdit = async (id) => {\n//     const updated = {\n//       ...projects.find(p => p.id === id),\n//       name: editName,\n//       key: editKey,\n//       type: editType,\n//       leads: editLeadsInput\n//         ? editLeadsInput.split(',').map(l => l.trim()).filter(l => l)\n//         : ['Unassigned'],\n//       lastUpdated: new Date().toISOString(),\n//     };\n//     await updateProject(id, updated);\n//     setEditingId(null);\n//     loadProjects();\n//   };\n\n//   const toggleSidebar = () => {\n//     setSidebarOpen(!sidebarOpen);\n//   };\n\n//   return (\n//     <div style={{ display: 'flex', height: '100vh', flexDirection: isMobile ? 'column' : 'row' }}>\n//       {/* Mobile header */}\n//       {isMobile && (\n//         <div style={{\n//           display: 'flex',\n//           alignItems: 'center',\n//           justifyContent: 'space-between',\n//           padding: '1rem',\n//           background: '#F4F5F7',\n//           borderBottom: '1px solid #DFE1E6'\n//         }}>\n//           <h2 style={{ fontSize: '18px', fontWeight: 'bold', margin: 0 }}>Projects</h2>\n//           <button\n//             onClick={toggleSidebar}\n//             style={{\n//               background: 'transparent',\n//               border: 'none',\n//               cursor: 'pointer',\n//               fontSize: '20px',\n//               color: '#0052CC'\n//             }}\n//           >\n//             {sidebarOpen ? <FiXIcon /> : <FiMenu />}\n//           </button>\n//         </div>\n//       )}\n\n//       {/* Sidebar create project form */}\n//       {(sidebarOpen || !isMobile) && (\n//         <div style={{\n//           width: isMobile ? '100%' : '320px',\n//           height: isMobile ? 'auto' : '100vh',\n//           borderRight: isMobile ? 'none' : '1px solid #DFE1E6',\n//           padding: '1rem',\n//           background: '#F4F5F7',\n//           overflowY: isMobile ? 'auto' : 'scroll',\n//           flexShrink: 0\n//         }}>\n//           <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1rem' }}>\n//             <h2 style={{ fontSize: '16px', fontWeight: 'bold', margin: 0 }}>Create Project</h2>\n//             {isMobile && (\n//               <button\n//                 onClick={toggleSidebar}\n//                 style={{\n//                   background: 'transparent',\n//                   border: 'none',\n//                   cursor: 'pointer',\n//                   fontSize: '18px',\n//                   color: '#0052CC'\n//                 }}\n//               >\n//                 <FiXIcon />\n//               </button>\n//             )}\n//           </div>\n\n//           <InputField label=\"Project Name\" value={name} onChange={e => setName(e.target.value)} placeholder=\"Enter project name\" />\n//           <InputField label=\"Project Key\" value={key} onChange={e => setKey(e.target.value)} placeholder=\"e.g. PROJ\" maxLength={10} />\n//           <InputField label=\"Project Type\" value={type} onChange={e => setType(e.target.value)} placeholder=\"Software, Business...\" />\n//           <InputField label=\"Leads (comma separated)\" value={leadsInput} onChange={e => setLeadsInput(e.target.value)} placeholder=\"John Doe, Jane Smith\" icon={FiUsers} />\n\n//           <button\n//             onClick={createProject}\n//             style={{\n//               width: '100%',\n//               background: '#0052CC',\n//               color: 'white',\n//               padding: '12px',\n//               border: 'none',\n//               borderRadius: '4px',\n//               cursor: 'pointer',\n//               display: 'flex',\n//               alignItems: 'center',\n//               justifyContent: 'center',\n//               fontSize: '14px',\n//               marginTop: '1rem'\n//             }}\n//           >\n//             <FiPlus style={{ marginRight: '6px' }} /> Create Project\n//           </button>\n//         </div>\n//       )}\n\n//       {/* Main project list */}\n//       <div style={{\n//         flex: 1,\n//         padding: isMobile ? '1rem' : '2rem',\n//         overflowY: 'auto',\n//         height: isMobile ? 'calc(100vh - 60px)' : '100vh'\n//       }}>\n//         {!isMobile && (\n//           <h2 style={{ fontSize: '20px', fontWeight: 'bold', marginBottom: '1.5rem' }}>Projects</h2>\n//         )}\n\n//         {isMobile && !sidebarOpen && (\n//           <div style={{ marginBottom: '1rem' }}>\n//             <button\n//               onClick={toggleSidebar}\n//               style={{\n//                 background: '#0052CC',\n//                 color: 'white',\n//                 border: 'none',\n//                 padding: '10px 16px',\n//                 borderRadius: '4px',\n//                 cursor: 'pointer',\n//                 display: 'flex',\n//                 alignItems: 'center',\n//                 gap: '8px',\n//                 fontSize: '14px',\n//                 marginBottom: '1rem'\n//               }}\n//             >\n//               <FiPlus /> Create New Project\n//             </button>\n//           </div>\n//         )}\n\n//         <div style={{\n//           display: 'grid',\n//           gap: '1rem',\n//           gridTemplateColumns: isMobile ? '1fr' : 'repeat(auto-fill, minmax(280px, 1fr))'\n//         }}>\n//           {projects.map(p => (\n//             <div\n//               key={p.id}\n//               style={{\n//                 background: '#fff',\n//                 border: '1px solid #DFE1E6',\n//                 borderRadius: '8px',\n//                 padding: '1rem',\n//                 display: 'flex',\n//                 flexDirection: 'column',\n//               }}\n//             >\n//               {editingId === p.id ? (\n//                 <>\n//                   <InputField label=\"Name\" value={editName} onChange={e => setEditName(e.target.value)} />\n//                   <InputField label=\"Key\" value={editKey} onChange={e => setEditKey(e.target.value)} />\n//                   <InputField label=\"Type\" value={editType} onChange={e => setEditType(e.target.value)} />\n//                   <InputField label=\"Leads\" value={editLeadsInput} onChange={e => setEditLeadsInput(e.target.value)} />\n//                   <div style={{ display: 'flex', gap: '0.5rem', marginTop: '0.5rem' }}>\n//                     <button onClick={() => saveEdit(p.id)} style={{ background: '#36B37E', color: '#fff', border: 'none', padding: '8px 12px', borderRadius: '4px', cursor: 'pointer', flex: 1 }}>\n//                       <FiCheck />\n//                     </button>\n//                     <button onClick={() => setEditingId(null)} style={{ background: '#FF5630', color: '#fff', border: 'none', padding: '8px 12px', borderRadius: '4px', cursor: 'pointer', flex: 1 }}>\n//                       <FiX />\n//                     </button>\n//                   </div>\n//                 </>\n//               ) : (\n//                 <>\n//                   <h3 style={{ fontSize: '16px', fontWeight: 'bold', marginBottom: '0.5rem' }}>\n//                     <Link to={`/projects/${p.id}`} style={{ color: '#0052CC', textDecoration: 'none' }}>\n//                       {p.name}\n//                     </Link>\n//                   </h3>\n//                   <p style={{ fontSize: '13px', color: '#6B778C', marginBottom: '0.5rem' }}>{p.type} Project</p>\n//                   <p style={{ fontSize: '13px', marginBottom: '0.5rem' }}>Key: {p.key}</p>\n//                   <p style={{ fontSize: '13px', marginBottom: '0.5rem' }}>Leads: {p.leads.join(', ')}</p>\n\n//                   <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '1rem' }}>\n//                     <div style={{ display: 'flex', gap: '0.5rem' }}>\n//                       <button onClick={() => startEdit(p)} style={{ background: '#FFAB00', color: '#fff', border: 'none', padding: '8px 12px', borderRadius: '4px', cursor: 'pointer' }}>\n//                         <FiEdit2 />\n//                       </button>\n//                       <button onClick={() => removeProject(p.id)} style={{ background: '#FF5630', color: '#fff', border: 'none', padding: '8px 12px', borderRadius: '4px', cursor: 'pointer' }}>\n//                         <FiTrash2 />\n//                       </button>\n//                     </div>\n//                     <button onClick={() => setExpanded({ ...expanded, [p.id]: !expanded[p.id] })} style={{ background: 'transparent', border: 'none', cursor: 'pointer', color: '#0052CC' }}>\n//                       {expanded[p.id] ? <FiChevronUp /> : <FiChevronDown />}\n//                     </button>\n//                   </div>\n\n//                   {expanded[p.id] && (\n//                     <div style={{ marginTop: '0.5rem', fontSize: '13px', color: '#172B4D' }}>\n//                       <p>{p.description || 'No description provided.'}</p>\n//                     </div>\n//                   )}\n//                 </>\n//               )}\n\n//               {/* Metadata */}\n//               <div\n//                 style={{\n//                   display: 'flex',\n//                   justifyContent: 'space-between',\n//                   marginTop: 'auto',\n//                   marginTop: '1rem',\n//                   paddingTop: '0.75rem',\n//                   borderTop: '1px solid #EBECF0',\n//                   fontSize: '12px',\n//                   color: '#6B778C',\n//                   flexDirection: isMobile ? 'column' : 'row',\n//                   gap: isMobile ? '0.5rem' : '0'\n//                 }}\n//               >\n//                 <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n//                   <FiCalendar size={12} />\n//                   {p.createdAt ? (\n//                     <>Created {formatDistanceToNow(new Date(p.createdAt), { addSuffix: true })}</>\n//                   ) : (\n//                     <>Created just now</>\n//                   )}\n//                 </div>\n//                 <div>\n//                   {p.lastUpdated ? (\n//                     <>Updated {formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true })}</>\n//                   ) : (\n//                     <>Updated just now</>\n//                   )}\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n\n//           {projects.length === 0 && (\n//             <div\n//               style={{\n//                 gridColumn: isMobile ? '1' : '1 / -1',\n//                 textAlign: 'center',\n//                 padding: '3rem 2rem',\n//                 background: '#fff',\n//                 borderRadius: '8px',\n//                 border: '1px dashed #DFE1E6',\n//                 color: '#6B778C',\n//               }}\n//             >\n//               <p style={{ marginBottom: '1rem' }}>No projects yet.</p>\n//               <p style={{ fontSize: '14px' }}>Create your first project using the form on the {isMobile ? 'top' : 'left'}.</p>\n//               {isMobile && !sidebarOpen && (\n//                 <button\n//                   onClick={toggleSidebar}\n//                   style={{\n//                     background: '#0052CC',\n//                     color: 'white',\n//                     border: 'none',\n//                     padding: '10px 16px',\n//                     borderRadius: '4px',\n//                     cursor: 'pointer',\n//                     marginTop: '1rem'\n//                   }}\n//                 >\n//                   Create Project\n//                 </button>\n//               )}\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/battina srinuvasurao/OneDrive/Desktop/AdminTicket/TicketingTool/src/components/projects/ProjectList.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\r\n// import { Link } from 'react-router-dom';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiChevronUp, FiChevronDown, FiUsers, FiCalendar } from 'react-icons/fi';\r\n// import { formatDistanceToNow } from 'date-fns';\r\n\r\n// // Reusable input component\r\n// function InputField({ label, value, onChange, icon: Icon, placeholder, maxLength }) {\r\n//   return (\r\n//     <div style={{ marginBottom: '1rem' }}>\r\n//       <label style={{ display: 'block', fontSize: '13px', fontWeight: 600, marginBottom: '0.25rem', color: '#172B4D' }}>\r\n//         {label}\r\n//       </label>\r\n//       <div style={{ display: 'flex', alignItems: 'center', border: '1px solid #DFE1E6', borderRadius: '4px', background: '#fff' }}>\r\n//         {Icon && <Icon style={{ marginLeft: '8px', color: '#6B778C' }} />}\r\n//         <input\r\n//           type=\"text\"\r\n//           value={value}\r\n//           onChange={onChange}\r\n//           placeholder={placeholder}\r\n//           maxLength={maxLength}\r\n//           style={{\r\n//             flex: 1,\r\n//             padding: '8px',\r\n//             border: 'none',\r\n//             outline: 'none',\r\n//             fontSize: '14px',\r\n//             borderRadius: '4px',\r\n//           }}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default function ProjectList() {\r\n//   const [projects, setProjects] = useState([]);\r\n//   const [name, setName] = useState('');\r\n//   const [key, setKey] = useState('');\r\n//   const [type, setType] = useState('Software');\r\n//   const [leadsInput, setLeadsInput] = useState(''); // store as plain text\r\n//   const [expanded, setExpanded] = useState({});\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editName, setEditName] = useState('');\r\n//   const [editKey, setEditKey] = useState('');\r\n//   const [editType, setEditType] = useState('');\r\n//   const [editLeadsInput, setEditLeadsInput] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     loadProjects();\r\n//   }, []);\r\n\r\n//   const loadProjects = async () => {\r\n//     const data = await listProjects();\r\n//     setProjects(data);\r\n//   };\r\n\r\n//   const createProject = async () => {\r\n//     if (!name.trim()) return;\r\n//     const now = new Date().toISOString();\r\n//     const p = {\r\n//       id: uuidv4(),\r\n//       key: key.toUpperCase() || 'PRJ',\r\n//       name,\r\n//       type,\r\n//       leads: leadsInput\r\n//         ? leadsInput.split(',').map(l => l.trim()).filter(l => l)\r\n//         : ['Unassigned'],\r\n//       description: '',\r\n//       lastUpdated: now,\r\n//       createdAt: now,\r\n//     };\r\n//     await addProject(p);\r\n//     setName('');\r\n//     setKey('');\r\n//     setLeadsInput('');\r\n//     setType('Software');\r\n//     loadProjects();\r\n//   };\r\n\r\n//   const removeProject = async (id) => {\r\n//     await deleteProject(id);\r\n//     loadProjects();\r\n//   };\r\n\r\n//   const startEdit = (p) => {\r\n//     setEditingId(p.id);\r\n//     setEditName(p.name);\r\n//     setEditKey(p.key);\r\n//     setEditType(p.type);\r\n//     setEditLeadsInput(p.leads.join(', '));\r\n//   };\r\n\r\n//   const saveEdit = async (id) => {\r\n//     const updated = {\r\n//       ...projects.find(p => p.id === id),\r\n//       name: editName,\r\n//       key: editKey,\r\n//       type: editType,\r\n//       leads: editLeadsInput\r\n//         ? editLeadsInput.split(',').map(l => l.trim()).filter(l => l)\r\n//         : ['Unassigned'],\r\n//       lastUpdated: new Date().toISOString(),\r\n//     };\r\n//     await updateProject(id, updated);\r\n//     setEditingId(null);\r\n//     loadProjects();\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ display: 'flex', height: '100vh' }}>\r\n//       {/* Sidebar create project form */}\r\n//       <div style={{ width: '320px', borderRight: '1px solid #DFE1E6', padding: '1rem', background: '#F4F5F7' }}>\r\n//         <h2 style={{ fontSize: '16px', fontWeight: 'bold', marginBottom: '1rem' }}>Create Project</h2>\r\n\r\n//         <InputField label=\"Project Name\" value={name} onChange={e => setName(e.target.value)} placeholder=\"Enter project name\" />\r\n//         <InputField label=\"Project Key\" value={key} onChange={e => setKey(e.target.value)} placeholder=\"e.g. PROJ\" maxLength={10} />\r\n//         <InputField label=\"Project Type\" value={type} onChange={e => setType(e.target.value)} placeholder=\"Software, Business...\" />\r\n//         <InputField label=\"Leads (comma separated)\" value={leadsInput} onChange={e => setLeadsInput(e.target.value)} placeholder=\"John Doe, Jane Smith\" icon={FiUsers} />\r\n\r\n//         <button\r\n//           onClick={createProject}\r\n//           style={{\r\n//             width: '100%',\r\n//             background: '#0052CC',\r\n//             color: 'white',\r\n//             padding: '8px',\r\n//             border: 'none',\r\n//             borderRadius: '4px',\r\n//             cursor: 'pointer',\r\n//             display: 'flex',\r\n//             alignItems: 'center',\r\n//             justifyContent: 'center',\r\n//             fontSize: '14px',\r\n//           }}\r\n//         >\r\n//           <FiPlus style={{ marginRight: '6px' }} /> Create Project\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Main project list */}\r\n//       <div style={{ flex: 1, padding: '2rem', overflowY: 'auto' }}>\r\n//         <h2 style={{ fontSize: '20px', fontWeight: 'bold', marginBottom: '1.5rem' }}>Projects</h2>\r\n\r\n//         <div style={{ display: 'grid', gap: '1rem', gridTemplateColumns: 'repeat(auto-fill, minmax(280px, 1fr))' }}>\r\n//           {projects.map(p => (\r\n//             <div\r\n//               key={p.id}\r\n//               style={{\r\n//                 background: '#fff',\r\n//                 border: '1px solid #DFE1E6',\r\n//                 borderRadius: '8px',\r\n//                 padding: '1rem',\r\n//                 display: 'flex',\r\n//                 flexDirection: 'column',\r\n//               }}\r\n//             >\r\n//               {editingId === p.id ? (\r\n//                 <>\r\n//                   <InputField label=\"Name\" value={editName} onChange={e => setEditName(e.target.value)} />\r\n//                   <InputField label=\"Key\" value={editKey} onChange={e => setEditKey(e.target.value)} />\r\n//                   <InputField label=\"Type\" value={editType} onChange={e => setEditType(e.target.value)} />\r\n//                   <InputField label=\"Leads\" value={editLeadsInput} onChange={e => setEditLeadsInput(e.target.value)} />\r\n//                   <div style={{ display: 'flex', gap: '0.5rem', marginTop: '0.5rem' }}>\r\n//                     <button onClick={() => saveEdit(p.id)} style={{ background: '#36B37E', color: '#fff', border: 'none', padding: '6px 10px', borderRadius: '4px', cursor: 'pointer' }}>\r\n//                       <FiCheck />\r\n//                     </button>\r\n//                     <button onClick={() => setEditingId(null)} style={{ background: '#FF5630', color: '#fff', border: 'none', padding: '6px 10px', borderRadius: '4px', cursor: 'pointer' }}>\r\n//                       <FiX />\r\n//                     </button>\r\n//                   </div>\r\n//                 </>\r\n//               ) : (\r\n//                 <>\r\n//                   <h3 style={{ fontSize: '16px', fontWeight: 'bold', marginBottom: '0.5rem' }}>\r\n//                     <Link to={`/projects/${p.id}`} style={{ color: '#0052CC', textDecoration: 'none' }}>\r\n//                       {p.name}\r\n//                     </Link>\r\n//                   </h3>\r\n//                   <p style={{ fontSize: '13px', color: '#6B778C', marginBottom: '0.5rem' }}>{p.type} Project</p>\r\n//                   <p style={{ fontSize: '13px', marginBottom: '0.5rem' }}>Key: {p.key}</p>\r\n//                   <p style={{ fontSize: '13px', marginBottom: '0.5rem' }}>Leads: {p.leads.join(', ')}</p>\r\n\r\n//                   <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '1rem' }}>\r\n//                     <div style={{ display: 'flex', gap: '0.5rem' }}>\r\n//                       <button onClick={() => startEdit(p)} style={{ background: '#FFAB00', color: '#fff', border: 'none', padding: '6px 10px', borderRadius: '4px', cursor: 'pointer' }}>\r\n//                         <FiEdit2 />\r\n//                       </button>\r\n//                       <button onClick={() => removeProject(p.id)} style={{ background: '#FF5630', color: '#fff', border: 'none', padding: '6px 10px', borderRadius: '4px', cursor: 'pointer' }}>\r\n//                         <FiTrash2 />\r\n//                       </button>\r\n//                     </div>\r\n//                     <button onClick={() => setExpanded({ ...expanded, [p.id]: !expanded[p.id] })} style={{ background: 'transparent', border: 'none', cursor: 'pointer', color: '#0052CC' }}>\r\n//                       {expanded[p.id] ? <FiChevronUp /> : <FiChevronDown />}\r\n//                     </button>\r\n//                   </div>\r\n\r\n//                   {expanded[p.id] && (\r\n//                     <div style={{ marginTop: '0.5rem', fontSize: '13px', color: '#172B4D' }}>\r\n//                       <p>{p.description || 'No description provided.'}</p>\r\n//                     </div>\r\n//                   )}\r\n//                 </>\r\n//               )}\r\n\r\n//               {/* Metadata */}\r\n//               <div\r\n//                 style={{\r\n//                   display: 'flex',\r\n//                   justifyContent: 'space-between',\r\n//                   marginTop: 'auto',\r\n//                   marginTop: '1rem',\r\n//                   paddingTop: '0.75rem',\r\n//                   borderTop: '1px solid #EBECF0',\r\n//                   fontSize: '12px',\r\n//                   color: '#6B778C',\r\n//                 }}\r\n//               >\r\n//                 <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n//                   <FiCalendar size={12} />\r\n//                   {p.createdAt ? (\r\n//                     <>Created {formatDistanceToNow(new Date(p.createdAt), { addSuffix: true })}</>\r\n//                   ) : (\r\n//                     <>Created just now</>\r\n//                   )}\r\n//                 </div>\r\n//                 <div>\r\n//                   {p.lastUpdated ? (\r\n//                     <>Updated {formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true })}</>\r\n//                   ) : (\r\n//                     <>Updated just now</>\r\n//                   )}\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n\r\n//           {projects.length === 0 && (\r\n//             <div\r\n//               style={{\r\n//                 gridColumn: '1 / -1',\r\n//                 textAlign: 'center',\r\n//                 padding: '3rem 2rem',\r\n//                 background: '#fff',\r\n//                 borderRadius: '8px',\r\n//                 border: '1px dashed #DFE1E6',\r\n//                 color: '#6B778C',\r\n//               }}\r\n//             >\r\n//               <p style={{ marginBottom: '1rem' }}>No projects yet.</p>\r\n//               <p style={{ fontSize: '14px' }}>Create your first project using the form on the left.</p>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n///////////////////////////////////  for responsiveness  //////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\r\n// import { Link } from 'react-router-dom';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiChevronUp, FiChevronDown, FiUsers, FiCalendar, FiMenu, FiX as FiXIcon } from 'react-icons/fi';\r\n// import { formatDistanceToNow } from 'date-fns';\r\n\r\n// // Reusable input component\r\n// function InputField({ label, value, onChange, icon: Icon, placeholder, maxLength }) {\r\n//   return (\r\n//     <div style={{ marginBottom: '1rem' }}>\r\n//       <label style={{ display: 'block', fontSize: '13px', fontWeight: 600, marginBottom: '0.25rem', color: '#172B4D' }}>\r\n//         {label}\r\n//       </label>\r\n//       <div style={{ display: 'flex', alignItems: 'center', border: '1px solid #DFE1E6', borderRadius: '4px', background: '#fff' }}>\r\n//         {Icon && <Icon style={{ marginLeft: '8px', color: '#6B778C' }} />}\r\n//         <input\r\n//           type=\"text\"\r\n//           value={value}\r\n//           onChange={onChange}\r\n//           placeholder={placeholder}\r\n//           maxLength={maxLength}\r\n//           style={{\r\n//             flex: 1,\r\n//             padding: '8px',\r\n//             border: 'none',\r\n//             outline: 'none',\r\n//             fontSize: '14px',\r\n//             borderRadius: '4px',\r\n//           }}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default function ProjectList() {\r\n//   const [projects, setProjects] = useState([]);\r\n//   const [name, setName] = useState('');\r\n//   const [key, setKey] = useState('');\r\n//   const [type, setType] = useState('Software');\r\n//   const [leadsInput, setLeadsInput] = useState(''); // store as plain text\r\n//   const [expanded, setExpanded] = useState({});\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editName, setEditName] = useState('');\r\n//   const [editKey, setEditKey] = useState('');\r\n//   const [editType, setEditType] = useState('');\r\n//   const [editLeadsInput, setEditLeadsInput] = useState('');\r\n//   const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n//   const [sidebarOpen, setSidebarOpen] = useState(!isMobile);\r\n\r\n//   useEffect(() => {\r\n//     loadProjects();\r\n    \r\n//     const handleResize = () => {\r\n//       const mobile = window.innerWidth < 768;\r\n//       setIsMobile(mobile);\r\n//       // Auto-close sidebar on mobile when resizing to mobile\r\n//       if (mobile) {\r\n//         setSidebarOpen(false);\r\n//       } else {\r\n//         setSidebarOpen(true);\r\n//       }\r\n//     };\r\n\r\n//     window.addEventListener('resize', handleResize);\r\n//     return () => window.removeEventListener('resize', handleResize);\r\n//   }, []);\r\n\r\n//   const loadProjects = async () => {\r\n//     const data = await listProjects();\r\n//     setProjects(data);\r\n//   };\r\n\r\n//   const createProject = async () => {\r\n//     if (!name.trim()) return;\r\n//     const now = new Date().toISOString();\r\n//     const p = {\r\n//       id: uuidv4(),\r\n//       key: key.toUpperCase() || 'PRJ',\r\n//       name,\r\n//       type,\r\n//       leads: leadsInput\r\n//         ? leadsInput.split(',').map(l => l.trim()).filter(l => l)\r\n//         : ['Unassigned'],\r\n//       description: '',\r\n//       lastUpdated: now,\r\n//       createdAt: now,\r\n//     };\r\n//     await addProject(p);\r\n//     setName('');\r\n//     setKey('');\r\n//     setLeadsInput('');\r\n//     setType('Software');\r\n//     loadProjects();\r\n    \r\n//     // Close sidebar on mobile after creating project\r\n//     if (isMobile) {\r\n//       setSidebarOpen(false);\r\n//     }\r\n//   };\r\n\r\n//   const removeProject = async (id) => {\r\n//     await deleteProject(id);\r\n//     loadProjects();\r\n//   };\r\n\r\n//   const startEdit = (p) => {\r\n//     setEditingId(p.id);\r\n//     setEditName(p.name);\r\n//     setEditKey(p.key);\r\n//     setEditType(p.type);\r\n//     setEditLeadsInput(p.leads.join(', '));\r\n//   };\r\n\r\n//   const saveEdit = async (id) => {\r\n//     const updated = {\r\n//       ...projects.find(p => p.id === id),\r\n//       name: editName,\r\n//       key: editKey,\r\n//       type: editType,\r\n//       leads: editLeadsInput\r\n//         ? editLeadsInput.split(',').map(l => l.trim()).filter(l => l)\r\n//         : ['Unassigned'],\r\n//       lastUpdated: new Date().toISOString(),\r\n//     };\r\n//     await updateProject(id, updated);\r\n//     setEditingId(null);\r\n//     loadProjects();\r\n//   };\r\n\r\n//   const toggleSidebar = () => {\r\n//     setSidebarOpen(!sidebarOpen);\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ display: 'flex', height: '100vh', flexDirection: isMobile ? 'column' : 'row' }}>\r\n//       {/* Mobile header */}\r\n//       {isMobile && (\r\n//         <div style={{\r\n//           display: 'flex',\r\n//           alignItems: 'center',\r\n//           justifyContent: 'space-between',\r\n//           padding: '1rem',\r\n//           background: '#F4F5F7',\r\n//           borderBottom: '1px solid #DFE1E6'\r\n//         }}>\r\n//           <h2 style={{ fontSize: '18px', fontWeight: 'bold', margin: 0 }}>Projects</h2>\r\n//           <button\r\n//             onClick={toggleSidebar}\r\n//             style={{\r\n//               background: 'transparent',\r\n//               border: 'none',\r\n//               cursor: 'pointer',\r\n//               fontSize: '20px',\r\n//               color: '#0052CC'\r\n//             }}\r\n//           >\r\n//             {sidebarOpen ? <FiXIcon /> : <FiMenu />}\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Sidebar create project form */}\r\n//       {(sidebarOpen || !isMobile) && (\r\n//         <div style={{\r\n//           width: isMobile ? '100%' : '320px',\r\n//           height: isMobile ? 'auto' : '100vh',\r\n//           borderRight: isMobile ? 'none' : '1px solid #DFE1E6',\r\n//           padding: '1rem',\r\n//           background: '#F4F5F7',\r\n//           overflowY: isMobile ? 'auto' : 'scroll',\r\n//           flexShrink: 0\r\n//         }}>\r\n//           <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1rem' }}>\r\n//             <h2 style={{ fontSize: '16px', fontWeight: 'bold', margin: 0 }}>Create Project</h2>\r\n//             {isMobile && (\r\n//               <button\r\n//                 onClick={toggleSidebar}\r\n//                 style={{\r\n//                   background: 'transparent',\r\n//                   border: 'none',\r\n//                   cursor: 'pointer',\r\n//                   fontSize: '18px',\r\n//                   color: '#0052CC'\r\n//                 }}\r\n//               >\r\n//                 <FiXIcon />\r\n//               </button>\r\n//             )}\r\n//           </div>\r\n\r\n//           <InputField label=\"Project Name\" value={name} onChange={e => setName(e.target.value)} placeholder=\"Enter project name\" />\r\n//           <InputField label=\"Project Key\" value={key} onChange={e => setKey(e.target.value)} placeholder=\"e.g. PROJ\" maxLength={10} />\r\n//           <InputField label=\"Project Type\" value={type} onChange={e => setType(e.target.value)} placeholder=\"Software, Business...\" />\r\n//           <InputField label=\"Leads (comma separated)\" value={leadsInput} onChange={e => setLeadsInput(e.target.value)} placeholder=\"John Doe, Jane Smith\" icon={FiUsers} />\r\n\r\n//           <button\r\n//             onClick={createProject}\r\n//             style={{\r\n//               width: '100%',\r\n//               background: '#0052CC',\r\n//               color: 'white',\r\n//               padding: '12px',\r\n//               border: 'none',\r\n//               borderRadius: '4px',\r\n//               cursor: 'pointer',\r\n//               display: 'flex',\r\n//               alignItems: 'center',\r\n//               justifyContent: 'center',\r\n//               fontSize: '14px',\r\n//               marginTop: '1rem'\r\n//             }}\r\n//           >\r\n//             <FiPlus style={{ marginRight: '6px' }} /> Create Project\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Main project list */}\r\n//       <div style={{\r\n//         flex: 1,\r\n//         padding: isMobile ? '1rem' : '2rem',\r\n//         overflowY: 'auto',\r\n//         height: isMobile ? 'calc(100vh - 60px)' : '100vh'\r\n//       }}>\r\n//         {!isMobile && (\r\n//           <h2 style={{ fontSize: '20px', fontWeight: 'bold', marginBottom: '1.5rem' }}>Projects</h2>\r\n//         )}\r\n\r\n//         {isMobile && !sidebarOpen && (\r\n//           <div style={{ marginBottom: '1rem' }}>\r\n//             <button\r\n//               onClick={toggleSidebar}\r\n//               style={{\r\n//                 background: '#0052CC',\r\n//                 color: 'white',\r\n//                 border: 'none',\r\n//                 padding: '10px 16px',\r\n//                 borderRadius: '4px',\r\n//                 cursor: 'pointer',\r\n//                 display: 'flex',\r\n//                 alignItems: 'center',\r\n//                 gap: '8px',\r\n//                 fontSize: '14px',\r\n//                 marginBottom: '1rem'\r\n//               }}\r\n//             >\r\n//               <FiPlus /> Create New Project\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n\r\n//         <div style={{\r\n//           display: 'grid',\r\n//           gap: '1rem',\r\n//           gridTemplateColumns: isMobile ? '1fr' : 'repeat(auto-fill, minmax(280px, 1fr))'\r\n//         }}>\r\n//           {projects.map(p => (\r\n//             <div\r\n//               key={p.id}\r\n//               style={{\r\n//                 background: '#fff',\r\n//                 border: '1px solid #DFE1E6',\r\n//                 borderRadius: '8px',\r\n//                 padding: '1rem',\r\n//                 display: 'flex',\r\n//                 flexDirection: 'column',\r\n//               }}\r\n//             >\r\n//               {editingId === p.id ? (\r\n//                 <>\r\n//                   <InputField label=\"Name\" value={editName} onChange={e => setEditName(e.target.value)} />\r\n//                   <InputField label=\"Key\" value={editKey} onChange={e => setEditKey(e.target.value)} />\r\n//                   <InputField label=\"Type\" value={editType} onChange={e => setEditType(e.target.value)} />\r\n//                   <InputField label=\"Leads\" value={editLeadsInput} onChange={e => setEditLeadsInput(e.target.value)} />\r\n//                   <div style={{ display: 'flex', gap: '0.5rem', marginTop: '0.5rem' }}>\r\n//                     <button onClick={() => saveEdit(p.id)} style={{ background: '#36B37E', color: '#fff', border: 'none', padding: '8px 12px', borderRadius: '4px', cursor: 'pointer', flex: 1 }}>\r\n//                       <FiCheck />\r\n//                     </button>\r\n//                     <button onClick={() => setEditingId(null)} style={{ background: '#FF5630', color: '#fff', border: 'none', padding: '8px 12px', borderRadius: '4px', cursor: 'pointer', flex: 1 }}>\r\n//                       <FiX />\r\n//                     </button>\r\n//                   </div>\r\n//                 </>\r\n//               ) : (\r\n//                 <>\r\n//                   <h3 style={{ fontSize: '16px', fontWeight: 'bold', marginBottom: '0.5rem' }}>\r\n//                     <Link to={`/projects/${p.id}`} style={{ color: '#0052CC', textDecoration: 'none' }}>\r\n//                       {p.name}\r\n//                     </Link>\r\n//                   </h3>\r\n//                   <p style={{ fontSize: '13px', color: '#6B778C', marginBottom: '0.5rem' }}>{p.type} Project</p>\r\n//                   <p style={{ fontSize: '13px', marginBottom: '0.5rem' }}>Key: {p.key}</p>\r\n//                   <p style={{ fontSize: '13px', marginBottom: '0.5rem' }}>Leads: {p.leads.join(', ')}</p>\r\n\r\n//                   <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '1rem' }}>\r\n//                     <div style={{ display: 'flex', gap: '0.5rem' }}>\r\n//                       <button onClick={() => startEdit(p)} style={{ background: '#FFAB00', color: '#fff', border: 'none', padding: '8px 12px', borderRadius: '4px', cursor: 'pointer' }}>\r\n//                         <FiEdit2 />\r\n//                       </button>\r\n//                       <button onClick={() => removeProject(p.id)} style={{ background: '#FF5630', color: '#fff', border: 'none', padding: '8px 12px', borderRadius: '4px', cursor: 'pointer' }}>\r\n//                         <FiTrash2 />\r\n//                       </button>\r\n//                     </div>\r\n//                     <button onClick={() => setExpanded({ ...expanded, [p.id]: !expanded[p.id] })} style={{ background: 'transparent', border: 'none', cursor: 'pointer', color: '#0052CC' }}>\r\n//                       {expanded[p.id] ? <FiChevronUp /> : <FiChevronDown />}\r\n//                     </button>\r\n//                   </div>\r\n\r\n//                   {expanded[p.id] && (\r\n//                     <div style={{ marginTop: '0.5rem', fontSize: '13px', color: '#172B4D' }}>\r\n//                       <p>{p.description || 'No description provided.'}</p>\r\n//                     </div>\r\n//                   )}\r\n//                 </>\r\n//               )}\r\n\r\n//               {/* Metadata */}\r\n//               <div\r\n//                 style={{\r\n//                   display: 'flex',\r\n//                   justifyContent: 'space-between',\r\n//                   marginTop: 'auto',\r\n//                   marginTop: '1rem',\r\n//                   paddingTop: '0.75rem',\r\n//                   borderTop: '1px solid #EBECF0',\r\n//                   fontSize: '12px',\r\n//                   color: '#6B778C',\r\n//                   flexDirection: isMobile ? 'column' : 'row',\r\n//                   gap: isMobile ? '0.5rem' : '0'\r\n//                 }}\r\n//               >\r\n//                 <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n//                   <FiCalendar size={12} />\r\n//                   {p.createdAt ? (\r\n//                     <>Created {formatDistanceToNow(new Date(p.createdAt), { addSuffix: true })}</>\r\n//                   ) : (\r\n//                     <>Created just now</>\r\n//                   )}\r\n//                 </div>\r\n//                 <div>\r\n//                   {p.lastUpdated ? (\r\n//                     <>Updated {formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true })}</>\r\n//                   ) : (\r\n//                     <>Updated just now</>\r\n//                   )}\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n\r\n//           {projects.length === 0 && (\r\n//             <div\r\n//               style={{\r\n//                 gridColumn: isMobile ? '1' : '1 / -1',\r\n//                 textAlign: 'center',\r\n//                 padding: '3rem 2rem',\r\n//                 background: '#fff',\r\n//                 borderRadius: '8px',\r\n//                 border: '1px dashed #DFE1E6',\r\n//                 color: '#6B778C',\r\n//               }}\r\n//             >\r\n//               <p style={{ marginBottom: '1rem' }}>No projects yet.</p>\r\n//               <p style={{ fontSize: '14px' }}>Create your first project using the form on the {isMobile ? 'top' : 'left'}.</p>\r\n//               {isMobile && !sidebarOpen && (\r\n//                 <button\r\n//                   onClick={toggleSidebar}\r\n//                   style={{\r\n//                     background: '#0052CC',\r\n//                     color: 'white',\r\n//                     border: 'none',\r\n//                     padding: '10px 16px',\r\n//                     borderRadius: '4px',\r\n//                     cursor: 'pointer',\r\n//                     marginTop: '1rem'\r\n//                   }}\r\n//                 >\r\n//                   Create Project\r\n//                 </button>\r\n//               )}\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }"],"mappingsgBA;;AAOA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}